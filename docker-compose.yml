version: '3.9'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        env_file: .env
        container_name: app
        restart: unless-stopped
        tty: true
        volumes:
            - ./php.ini:/usr/local/etc/php/conf.d/php.ini
            - .:/var/www/html/app
        networks:
            - app
        links:
            - db

    nginx:
        image: nginx:stable-alpine
        env_file: .env
        container_name: app-nginx
        restart: unless-stopped
        working_dir: /var/www/html/app
        depends_on:
            - app
        ports:
            - 9000:80
        expose:
            - 80
        volumes:
            - .:/var/www/html/
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./logs/nginx:/var/log/nginx
        networks:
            - app

    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
        ports:
            - "3306:3306"
        restart: unless-stopped
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - app
    redis:
        image: redis:alpine
        restart: unless-stopped
        networks:
            - app

    adminer:
        image: adminer
        environment:
            ADMINER_DESIGN: lucas-sandery
        links:
            - db
        ports:
            - "9001:8080"
        restart: unless-stopped
        networks:
            - app

    phpredisadmin:
        image: erikdubbelboer/phpredisadmin
        environment:
            - ADMIN_USER=admin
            - ADMIN_PASS=admin
            - REDIS_1_HOST=redis
            - REDIS_1_PORT=6379
        links:
            - redis
        ports:
            - "9003:80"
        restart: unless-stopped
        networks:
            - app
networks:
    app:
        name: 'app_api'
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local
